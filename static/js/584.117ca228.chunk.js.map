{"version":3,"file":"static/js/584.117ca228.chunk.js","mappings":"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","sources":["webpack://aqua-frontend/./src/components/UpdatePassword/UpdatePasswordComponent.module.css?cb39","components/UpdatePassword/UpdatePassword.tsx","pages/AuthPages/UpdatePasswordPage.tsx","webpack://aqua-frontend/./src/pages/AuthPages/AuthPage.module.css?823e"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainstr\":\"UpdatePasswordComponent_mainstr__NnnRk\",\"form\":\"UpdatePasswordComponent_form__mZ1yS\",\"formControl\":\"UpdatePasswordComponent_formControl__VlA3w\",\"formTitle\":\"UpdatePasswordComponent_formTitle__7cfCF\",\"formLabel\":\"UpdatePasswordComponent_formLabel__kt1iv\",\"stack\":\"UpdatePasswordComponent_stack__0ChZG\",\"inputBox\":\"UpdatePasswordComponent_inputBox__G0vxy\",\"inputBoxRep\":\"UpdatePasswordComponent_inputBoxRep__LuP5Z\",\"iconeye\":\"UpdatePasswordComponent_iconeye__jOzvf\",\"inputpassword\":\"UpdatePasswordComponent_inputpassword__n-rMD\",\"button\":\"UpdatePasswordComponent_button__BU71d\",\"errormessage\":\"UpdatePasswordComponent_errormessage__ySVyv\",\"errorBorder\":\"UpdatePasswordComponent_errorBorder__DyS2Y\",\"errorInput\":\"UpdatePasswordComponent_errorInput__CVkvW\"};","import { ErrorMessage, Field, Formik, Form, FormikHelpers } from \"formik\";\nimport { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { ReactComponent as OpenEyeIcon } from \"../../images/icons/eye-slash.svg\";\nimport { ReactComponent as ClosedEyeIcon } from \"../../images/icons/eye.svg\";\nimport css from \"./UpdatePasswordComponent.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Values {\n  newPassword: string;\n  repeatNewPassword: string;\n}\n\ninterface IProps {\n  onSubmit: (values: Values, { resetForm }: FormikHelpers<Values>) => void;\n}\n\nconst UpdatetPassword: React.FC<IProps> = ({ onSubmit }) => {\n  const { t } = useTranslation();\n\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showRepeatNewPassword, setShowRepeatNewPassword] = useState(false);\n\n  const initialValues = {\n    newPassword: \"\",\n    repeatNewPassword: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    newPassword: Yup.string()\n      .required(`${t(\"authorization.errors.passwordReq\")}`)\n      .min(8, `${t(\"authorization.errors.passwordLeast\")}`)\n      .max(64, `${t(\"authorization.errors.passwordLess\")}`),\n    repeatNewPassword: Yup.string()\n      .oneOf(\n        [Yup.ref(\"newPassword\")],\n        `${t(\"authorization.errors.passwordMatch\")}`\n      )\n      .required(`${t(\"authorization.errors.repeatPasswordReq\")}`),\n  });\n\n  return (\n    <div className={css.mainstr}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form className={css.form}>\n            <h1 className={css.formTitle}>Update password</h1>\n            <div className={css.formControl}>\n              <div className={css.stack}>\n                <label className={css.formLabel} htmlFor=\"update-password-id1\">\n                  {t(\"authorization.enterNewPass\")}\n                </label>\n                <div\n                  className={`${css.inputBox} ${\n                    errors.newPassword && touched.newPassword\n                      ? css.errorBorder\n                      : \"\"\n                  }`}\n                >\n                  <Field\n                    id=\"update-password-id1\"\n                    className={`${css.inputpassword}  ${\n                      errors.newPassword && touched.newPassword\n                        ? css.errorInput\n                        : \"\"\n                    }`}\n                    name=\"newPassword\"\n                    type={showNewPassword ? \"text\" : \"password\"}\n                    placeholder={t(\"authorization.enterNewPassText\")}\n                  />\n                  <div\n                    className={css.iconeye}\n                    onClick={() => setShowNewPassword(!showNewPassword)}\n                    style={{\n                      cursor: \"pointer\",\n                      marginTop: \"auto\",\n                      marginBottom: \"auto\",\n                    }}\n                  >\n                    {showNewPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                  </div>\n                </div>\n                <ErrorMessage\n                  name=\"newPassword\"\n                  component=\"div\"\n                  className={css.errormessage}\n                />\n              </div>\n              <div className={css.stack}>\n                <label className={css.formLabel} htmlFor=\"update-password-id2\">\n                  {t(\"authorization.repeatNewPass\")}\n                </label>\n                <div\n                  className={`${css.inputBox} ${\n                    errors.repeatNewPassword && touched.repeatNewPassword\n                      ? css.errorBorder\n                      : \"\"\n                  }`}\n                >\n                  <Field\n                    id=\"update-password-id2\"\n                    className={`${css.inputpassword}  ${\n                      errors.repeatNewPassword && touched.repeatNewPassword\n                        ? css.errorInput\n                        : \"\"\n                    }`}\n                    name=\"repeatNewPassword\"\n                    type={showRepeatNewPassword ? \"text\" : \"password\"}\n                    placeholder={t(\"authorization.repeatNewPassText\")}\n                  />\n                  <div\n                    className={css.iconeye}\n                    onClick={() =>\n                      setShowRepeatNewPassword(!showRepeatNewPassword)\n                    }\n                    style={{\n                      cursor: \"pointer\",\n                      marginTop: \"auto\",\n                      marginBottom: \"auto\",\n                    }}\n                  >\n                    {showRepeatNewPassword ? (\n                      <ClosedEyeIcon />\n                    ) : (\n                      <OpenEyeIcon />\n                    )}\n                  </div>\n                </div>\n                <ErrorMessage\n                  name=\"repeatNewPassword\"\n                  component=\"div\"\n                  className={css.errormessage}\n                />\n              </div>\n              <button type=\"submit\" className={css.button}>\n                {t(\"authorization.send\")}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UpdatetPassword;\n","import { useParams } from \"react-router-dom\";\nimport { sendUpdatePass } from \"../../services/waterApi\";\nimport css from \"./AuthPage.module.css\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { useState } from \"react\";\nimport UpdatetPassword from \"../../components/UpdatePassword/UpdatePassword\";\nimport { FormikHelpers } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Values {\n  newPassword: string;\n  repeatNewPassword: string;\n}\n\nconst UpdatetPasswordPage = () => {\n  const { t } = useTranslation();\n\n  const { token } = useParams();\n  const [loader, setLoader] = useState(false);\n\n  const handleSubmit = async (\n    values: Values,\n    { resetForm }: FormikHelpers<Values>\n  ) => {\n    const { newPassword, repeatNewPassword } = values;\n\n    if (newPassword !== repeatNewPassword) {\n      return;\n    }\n    setLoader(true);\n    try {\n      if (!token) return;\n      await sendUpdatePass(token, { newPassword: repeatNewPassword });\n      toast.success(`${t(\"authorization.notification.successPass\")}`);\n\n      setTimeout(() => {\n        return window.location.replace(\"/aqua-frontend/signin\");\n      }, 3000);\n    } catch (error) {\n      setLoader(false);\n      toast.error(`${t(\"authorization.notification.error\")}`);\n    } finally {\n      setLoader(false);\n    }\n\n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <UpdatetPassword onSubmit={handleSubmit} />\n      {loader && <Loader />}\n    </div>\n  );\n};\n\nexport default UpdatetPasswordPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AuthPage_container__YIM88\",\"mainstr\":\"AuthPage_mainstr__D49SA\"};"],"names":["_ref","onSubmit","t","useTranslation","showNewPassword","setShowNewPassword","useState","showRepeatNewPassword","setShowRepeatNewPassword","validationSchema","Yup","newPassword","required","concat","min","max","repeatNewPassword","oneOf","_jsx","className","css","children","Formik","initialValues","_ref2","errors","touched","_jsxs","Form","htmlFor","Field","id","name","type","placeholder","onClick","style","cursor","marginTop","marginBottom","ClosedEyeIcon","OpenEyeIcon","ErrorMessage","component","UpdatetPasswordPage","token","useParams","loader","setLoader","container","UpdatetPassword","async","values","resetForm","sendUpdatePass","toast","success","setTimeout","window","location","replace","error","Loader"],"sourceRoot":""}