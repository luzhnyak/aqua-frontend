{"version":3,"file":"static/js/369.911d8d36.chunk.js","mappings":"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","sources":["webpack://aqua-frontend/./src/pages/UpdatePasswordPage/UpdatePasswordPage.module.css?e9ae","pages/UpdatePasswordPage/UpdatePasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UpdatePasswordPage_container__vQNxa\",\"mainstr\":\"UpdatePasswordPage_mainstr__cct0f\",\"formControl\":\"UpdatePasswordPage_formControl__9UWoa\",\"formTitle\":\"UpdatePasswordPage_formTitle__RCb4l\",\"formLabel\":\"UpdatePasswordPage_formLabel__K01cF\",\"stack\":\"UpdatePasswordPage_stack__zhv4q\",\"inputBox\":\"UpdatePasswordPage_inputBox__FgrSP\",\"inputBoxRep\":\"UpdatePasswordPage_inputBoxRep__fAqXS\",\"iconeye\":\"UpdatePasswordPage_iconeye__jPrlx\",\"inputpassword\":\"UpdatePasswordPage_inputpassword__0pD-j\",\"button\":\"UpdatePasswordPage_button__7pufs\",\"errormessage\":\"UpdatePasswordPage_errormessage__NNedZ\",\"errorBorder\":\"UpdatePasswordPage_errorBorder__JoLR4\",\"errorInput\":\"UpdatePasswordPage_errorInput__diBJA\"};","import { ErrorMessage, Field, Formik, Form } from 'formik';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { ReactComponent as OpenEyeIcon } from 'images/icons/eye-slash.svg';\nimport { ReactComponent as ClosedEyeIcon } from 'images/icons/eye.svg';\nimport { useParams } from 'react-router-dom';\nimport { sendUpdatePass } from 'services/waterApi';\nimport css from './UpdatePasswordPage.module.css';\n\nconst UpdatetPasswordPage = () => {\n  const { token } = useParams();\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showRepeatNewPassword, setShowRepeatNewPassword] = useState(false);\n\n  const initialValues = {\n    newPassword: '',\n    repeatNewPassword: '',\n  };\n\n  const validationSchema = Yup.object({\n    newPassword: Yup.string()\n      .required('Password is required.')\n      .min(7, 'Password must be at least 8 characters.')\n      .max(55, 'Password must be less than 55 characters.'),\n    repeatNewPassword: Yup.string()\n      .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\n      .required('Repeat password is required.'),\n  });\n\n  const onSubmit = async (values, { resetForm }) => {\n    const { newPassword, repeatNewPassword } = values;\n\n    if (newPassword !== repeatNewPassword) {\n      return;\n    }\n\n    await sendUpdatePass(token, repeatNewPassword);\n\n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.mainstr}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form className={css.form}>\n              <h1 className={css.formTitle}>Update password</h1>\n              <div className={css.formControl}>\n              <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"update-password-id1\">\n                    Enter your password\n                  </label>\n                  <div\n                    className={`${css.inputBox} ${\n                      errors.newPassword && touched.newPassword ? css.errorBorder : ''\n                    }`}\n                  >\n                    <Field\n                      id=\"update-password-id1\"\n                      className={`${css.inputpassword}  ${\n                        errors.newPassword && touched.newPassword\n                          ? css.errorInput\n                          : ''\n                      }`}\n                      name=\"newPassword\"\n                      type={showNewPassword ? 'text' : 'password'}\n                      placeholder=\"Enter new password\"\n                    />\n                    <div\n                      className={css.iconeye}\n                      onClick={() => setShowNewPassword(!showNewPassword)}\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 'auto',\n                        marginBottom: 'auto',\n                      }}\n                    >\n                      {showNewPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                    </div>\n                  </div>\n                  <ErrorMessage\n                    name=\"newPassword\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n                <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"update-password-id2\">\n                    Enter your password\n                  </label>\n                  <div\n                    className={`${css.inputBox} ${\n                      errors.repeatNewPassword && touched.repeatNewPassword ? css.errorBorder : ''\n                    }`}\n                  >\n                    <Field\n                      id=\"update-password-id2\"\n                      className={`${css.inputpassword}  ${\n                        errors.repeatNewPassword && touched.repeatNewPassword\n                          ? css.errorInput\n                          : ''\n                      }`}\n                      name=\"repeatNewPassword\"\n                      type={showRepeatNewPassword ? 'text' : 'password'}\n                      placeholder=\"Enter repeat new password\"\n                    />\n                    <div\n                      className={css.iconeye}\n                      onClick={() => setShowRepeatNewPassword(!showRepeatNewPassword)}\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 'auto',\n                        marginBottom: 'auto',\n                      }}\n                    >\n                      {showRepeatNewPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                    </div>\n                  </div>\n                  <ErrorMessage\n                    name=\"repeatNewPassword\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n                <button type=\"submit\" className={css.button}>Send</button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdatetPasswordPage;\n"],"names":["token","useParams","_useState","useState","_useState2","_slicedToArray","showNewPassword","setShowNewPassword","_useState3","_useState4","showRepeatNewPassword","setShowRepeatNewPassword","validationSchema","Yup","newPassword","required","min","max","repeatNewPassword","oneOf","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref","resetForm","_context","prev","next","abrupt","sendUpdatePass","stop","_x","_x2","apply","arguments","_jsx","className","css","children","Formik","initialValues","_ref3","errors","touched","_jsxs","Form","htmlFor","concat","Field","id","name","type","placeholder","onClick","style","cursor","marginTop","marginBottom","ClosedEyeIcon","OpenEyeIcon","ErrorMessage","component"],"sourceRoot":""}