{"version":3,"file":"static/js/116.297a5a3c.chunk.js","mappings":"oJACA,QAA0B,+BAA1B,EAAgE,4BAAhE,EAA0G,mCAA1G,EAAyJ,iCAAzJ,EAAsM,iCAAtM,EAA+O,6BAA/O,EAAoR,6BAApR,EAA0T,8BAA1T,EAAuW,oCAAvW,EAAyZ,mCAAzZ,EAAyc,kCAAzc,EAAof,8B,kCCcpf,MAyDA,EAzDwCA,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAC1D,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAMRC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,QACAC,SAAS,GAADC,OAAIN,EAAE,qCAGnB,OACEO,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UAC1BH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAbgB,CACpBR,MAAO,IAaHF,iBAAkBA,EAClBH,SAAUA,EAASW,SAElBG,IAAA,IAAC,OAAEC,EAAM,QAAEC,GAASF,EAAA,OACnBG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACT,UAAWC,EAASC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAAEZ,KAC/BkB,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAgBC,SAAA,EAC9BM,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,kBAAkBV,UAAWC,EAAcC,SACvDV,EAAE,0BAELO,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACJC,GAAG,kBACHZ,UAAS,GAAAF,OAAKG,EAAS,KAAAH,OACrBQ,EAAOV,OAASW,EAAQX,MAAQK,EAAkB,GAAE,KAAAH,OAClDQ,EAAOV,OAASW,EAAQX,MAAQK,EAAiB,IACrDY,KAAK,QACLC,KAAK,QACLC,YAAavB,EAAE,8BAEjBO,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CACXH,KAAK,QACLI,UAAU,MACVjB,UAAWC,QAGfF,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASd,UAAWC,EAAWC,SACzCV,EAAE,yBAELO,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAG,UAAUnB,UAAWC,EAAWC,UACvCH,EAAAA,EAAAA,KAAA,KAAAG,SAAIV,EAAE,gCAGL,KAGP,C,6DCnEV,QAA4B,yC,0ECa5B,MA4CA,EA5C8B4B,KAC5B,MAAM,EAAE5B,IAAMC,EAAAA,EAAAA,OAEP4B,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAwBrC,OACExB,EAAAA,EAAAA,KAAA,WAAAG,UACEM,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAcC,SAAA,EAC1BH,EAAAA,EAAAA,KAACyB,EAAAA,EAAa,CACZlC,MAAOE,EAAE,2BACTD,SA3BWkC,MACnBC,EAAcrC,KAEV,IADJ,UAAEsC,GAAkCtC,EAEpCiC,GAAU,GACV,UACQM,EAAAA,EAAAA,IAAkBF,GACxBG,EAAAA,GAAMC,QAAQ,GAADhC,OAAIN,EAAE,wCAEnBuC,YAAW,IACFC,OAAOC,SAASC,QAAQ,0BAC9B,IACL,CAAE,MAAOC,GACPb,GAAU,GACVO,EAAAA,GAAMM,MAAM,GAADrC,OAAIN,EAAE,qCACnB,CAAC,QACC8B,GAAU,EACZ,CAEAK,GAAW,IAUJN,IACCtB,EAAAA,EAAAA,KAACqC,EAAAA,EAAQ,CAAAlC,UACPH,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,UAIP,C","sources":["webpack://aqua-frontend/./src/components/FormSendEmail/FormSendEmail.module.css?ff65","components/FormSendEmail/FormSendEmail.tsx","webpack://aqua-frontend/./src/pages/ResendVerifyEmailPage/ResendVerifyEmailPage.module.css?6d90","pages/ResendVerifyEmailPage/ResendVerifyEmailPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainstr\":\"FormSendEmail_mainstr__BQzI9\",\"form\":\"FormSendEmail_form__XLJZn\",\"formControl\":\"FormSendEmail_formControl__hxqBR\",\"formTitle\":\"FormSendEmail_formTitle__TGU18\",\"formLabel\":\"FormSendEmail_formLabel__uPbru\",\"stack\":\"FormSendEmail_stack__Zvuhf\",\"input\":\"FormSendEmail_input__joBa0\",\"button\":\"FormSendEmail_button__mHAhG\",\"errormessage\":\"FormSendEmail_errormessage__OnuLr\",\"errorBorder\":\"FormSendEmail_errorBorder__hrTLs\",\"errorInput\":\"FormSendEmail_errorInput__Gx8iM\",\"signin\":\"FormSendEmail_signin__GbgYC\"};","import { ErrorMessage, Field, Formik, Form, FormikHelpers } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport css from \"./FormSendEmail.module.css\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Values {\n  email: string;\n}\n\ninterface IProps {\n  title: string;\n  onSubmit: (values: Values, { resetForm }: FormikHelpers<Values>) => void;\n}\n\nconst FormSendEmail: React.FC<IProps> = ({ title, onSubmit }) => {\n  const { t } = useTranslation();\n\n  const initialValues = {\n    email: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email()\n      .required(`${t(\"authorization.errors.emailReq\")}`),\n  });\n\n  return (\n    <div className={css.mainstr}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form className={css.form}>\n            <h1 className={css.formTitle}>{title}</h1>\n            <div className={css.formControl}>\n              <div className={css.stack}>\n                <label htmlFor=\"forgot-pass-id1\" className={css.formLabel}>\n                  {t(\"authorization.email\")}\n                </label>\n                <Field\n                  id=\"forgot-pass-id1\"\n                  className={`${css.input} ${\n                    errors.email && touched.email ? css.errorBorder : \"\"\n                  } ${errors.email && touched.email ? css.errorInput : \"\"}`}\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder={t(\"authorization.emailText\")}\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className={css.errormessage}\n                />\n              </div>\n              <button type=\"submit\" className={css.button}>\n                {t(\"authorization.send\")}\n              </button>\n              <Link to=\"/signin\" className={css.signin}>\n                <p>{t(\"authorization.login\")}</p>\n              </Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default FormSendEmail;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResendVerifyEmailPage_container__hVYjx\"};","import FormSendEmail from \"../../components/FormSendEmail/FormSendEmail\";\nimport css from \"./ResendVerifyEmailPage.module.css\";\nimport { resendVerifyToken } from \"../../services/waterApi\";\nimport { toast } from \"react-toastify\";\nimport Backdrop from \"../../components/Backdrop/Backdrop\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { useState } from \"react\";\nimport { FormikHelpers } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Values {\n  email: string;\n}\n\nconst ResendVerifyEmailPage = () => {\n  const { t } = useTranslation();\n\n  const [loader, setLoader] = useState(false);\n\n  const handleSubmit = async (\n    values: Values,\n    { resetForm }: FormikHelpers<Values>\n  ) => {\n    setLoader(true);\n    try {\n      await resendVerifyToken(values);\n      toast.success(`${t(\"authorization.notification.success\")}`);\n\n      setTimeout(() => {\n        return window.location.replace(\"/aqua-frontend/signin\");\n      }, 3000);\n    } catch (error) {\n      setLoader(false);\n      toast.error(`${t(\"authorization.notification.error\")}`);\n    } finally {\n      setLoader(false);\n    }\n\n    resetForm();\n  };\n\n  return (\n    <section>\n      <div className={css.container}>\n          <FormSendEmail\n            title={t(\"resendVerifyEmail.title\")}\n            onSubmit={handleSubmit}\n          />\n          {loader && (\n            <Backdrop>\n              <Loader />\n            </Backdrop>\n          )}\n      </div>\n    </section>\n  );\n};\n\nexport default ResendVerifyEmailPage;\n"],"names":["_ref","title","onSubmit","t","useTranslation","validationSchema","Yup","email","required","concat","_jsx","className","css","children","Formik","initialValues","_ref2","errors","touched","_jsxs","Form","htmlFor","Field","id","name","type","placeholder","ErrorMessage","component","Link","to","ResendVerifyEmailPage","loader","setLoader","useState","FormSendEmail","async","values","resetForm","resendVerifyToken","toast","success","setTimeout","window","location","replace","error","Backdrop","Loader"],"sourceRoot":""}