{"version":3,"file":"static/js/316.211120e8.chunk.js","mappings":"oJACA,QAA0B,+BAA1B,EAAgE,4BAAhE,EAA0G,mCAA1G,EAAyJ,iCAAzJ,EAAsM,iCAAtM,EAA+O,6BAA/O,EAAoR,6BAApR,EAA0T,8BAA1T,EAAuW,oCAAvW,EAAyZ,mCAAzZ,EAAyc,kCAAzc,EAAof,8B,wBCapf,MAqDA,EArDwCA,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAC1D,MAIMG,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,QAAQC,SAAS,wBAGvC,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UACxBH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAXc,CACpBP,MAAO,IAWDF,iBAAkBA,EAClBD,SAAUA,EAASQ,SAElBG,IAAA,IAAC,OAAEC,EAAM,QAAEC,GAASF,EAAA,OACnBG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACT,UAAWC,EAASC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAAET,KAC/Be,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAgBC,SAAA,EAC9BM,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,kBAAkBV,UAAWC,EAAcC,SAAC,sBAG3DH,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACJC,GAAG,kBACHZ,UAAS,GAAAa,OAAKZ,EAAS,KAAAY,OACrBP,EAAOT,OAASU,EAAQV,MAAQI,EAAkB,GAAE,KAAAY,OAClDP,EAAOT,OAASU,EAAQV,MAAQI,EAAiB,IACrDa,KAAK,QACLC,KAAK,QACLC,YAAY,WAEdjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAY,CACXH,KAAK,QACLI,UAAU,MACVlB,UAAWC,QAGfF,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAASf,UAAWC,EAAWC,SAAC,UAG7CH,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACC,GAAG,UAAUpB,UAAWC,EAAWC,UACvCH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,mBAGF,KAGT,C,6DC9DV,QAA4B,sC,gECY5B,MA+BA,EA/B2BmB,KACzB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAmBrC,OACEhB,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CAAChC,MAAO,kBAAmBC,SAnBxBgC,MAAOC,EAAcnC,KAA4C,IAA1C,UAAEoC,GAAkCpC,EAC9E+B,GAAU,GACV,UACQM,EAAAA,EAAAA,IAAmBF,GACzBG,EAAAA,GAAMC,QAAQ,iDAEhB,CAAE,MAAOC,GACPT,GAAU,GACVO,EAAAA,GAAME,MAAM,kCAEd,CAAC,QACCT,GAAU,EACZ,CAEAK,GAAW,IAMRN,IACAvB,EAAAA,EAAAA,KAACkC,EAAAA,EAAQ,CAAA/B,UACPH,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,QAEN,C","sources":["webpack://aqua-frontend/./src/components/FormSendEmail/FormSendEmail.module.css?ff65","components/FormSendEmail/FormSendEmail.tsx","webpack://aqua-frontend/./src/pages/ForgotPasswordPage/ForgotPasswordPage.module.css?f1b2","pages/ForgotPasswordPage/ForgotPasswordPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainstr\":\"FormSendEmail_mainstr__BQzI9\",\"form\":\"FormSendEmail_form__XLJZn\",\"formControl\":\"FormSendEmail_formControl__hxqBR\",\"formTitle\":\"FormSendEmail_formTitle__TGU18\",\"formLabel\":\"FormSendEmail_formLabel__uPbru\",\"stack\":\"FormSendEmail_stack__Zvuhf\",\"input\":\"FormSendEmail_input__joBa0\",\"button\":\"FormSendEmail_button__mHAhG\",\"errormessage\":\"FormSendEmail_errormessage__OnuLr\",\"errorBorder\":\"FormSendEmail_errorBorder__hrTLs\",\"errorInput\":\"FormSendEmail_errorInput__Gx8iM\",\"signin\":\"FormSendEmail_signin__GbgYC\"};","import { ErrorMessage, Field, Formik, Form, FormikHelpers } from 'formik';\nimport { Link } from 'react-router-dom';\nimport css from './FormSendEmail.module.css';\nimport * as Yup from 'yup';\n\ninterface Values {\n  email: string,\n} \n\ninterface IProps {\n  title: string,\n  onSubmit: (values: Values, { resetForm }: FormikHelpers<Values>) => void\n}\n\nconst FormSendEmail: React.FC<IProps> = ({ title, onSubmit }) => {\n  const initialValues = {\n    email: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email().required('Email is required.'),\n  });\n\n  return (\n    <div className={css.mainstr}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form className={css.form}>\n              <h1 className={css.formTitle}>{title}</h1>\n              <div className={css.formControl}>\n                <div className={css.stack}>\n                  <label htmlFor=\"forgot-pass-id1\" className={css.formLabel}>\n                    Enter your email\n                  </label>\n                  <Field\n                    id=\"forgot-pass-id1\"\n                    className={`${css.input} ${\n                      errors.email && touched.email ? css.errorBorder : ''\n                    } ${errors.email && touched.email ? css.errorInput : ''}`}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n                <button type=\"submit\" className={css.button}>\n                  Send\n                </button>\n                <Link to=\"/signin\" className={css.signin}>\n                  <p>Sign in</p>\n                </Link>\n              </div>\n            </Form>\n          )}\n        </Formik>\n    </div>\n  );\n};\n\nexport default FormSendEmail;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ForgotPasswordPage_container__Z-X75\"};","import { sendMailForgotPass } from '../../services/waterApi';\nimport css from './ForgotPasswordPage.module.css';\nimport FormSendEmail from '../../components/FormSendEmail/FormSendEmail';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport Loader from '../../components/Loader/Loader';\nimport Backdrop from '../../components/Backdrop/Backdrop';\nimport { FormikHelpers } from 'formik';\n\ninterface Values {\n  email: string,\n} \n\nconst ForgotPasswordPage = () => {\n  const [loader, setLoader] = useState(false);\n  \n  const handleSubmit = async (values: Values, { resetForm }: FormikHelpers<Values>) => {\n    setLoader(true)\n    try {\n      await sendMailForgotPass(values);\n      toast.success(\"The operation was successful, check your email\")\n\n    } catch (error) {\n      setLoader(false)\n      toast.error(\"Something went wrong, try again\")\n      \n    } finally {\n      setLoader(false)\n    }\n    \n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <FormSendEmail title={\"Forgot password\"} onSubmit={handleSubmit}/>\n      {loader && \n       <Backdrop>\n         <Loader />\n       </Backdrop>}\n    </div>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["_ref","title","onSubmit","validationSchema","Yup","email","required","_jsx","className","css","children","Formik","initialValues","_ref2","errors","touched","_jsxs","Form","htmlFor","Field","id","concat","name","type","placeholder","ErrorMessage","component","Link","to","ForgotPasswordPage","loader","setLoader","useState","FormSendEmail","async","values","resetForm","sendMailForgotPass","toast","success","error","Backdrop","Loader"],"sourceRoot":""}