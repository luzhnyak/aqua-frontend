{"version":3,"file":"static/js/480.7720ae23.chunk.js","mappings":"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","sources":["webpack://aqua-frontend/./src/pages/UpdatePasswordPage/UpdatePasswordPage.module.css?e9ae","webpack://aqua-frontend/./src/components/UpdatePassword/UpdatePasswordComponent.module.css?cb39","components/UpdatePassword/UpdatePassword.tsx","pages/UpdatePasswordPage/UpdatePasswordPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UpdatePasswordPage_container__vQNxa\",\"mainstr\":\"UpdatePasswordPage_mainstr__cct0f\",\"form\":\"UpdatePasswordPage_form__h3Byg\",\"formControl\":\"UpdatePasswordPage_formControl__9UWoa\",\"formTitle\":\"UpdatePasswordPage_formTitle__RCb4l\",\"formLabel\":\"UpdatePasswordPage_formLabel__K01cF\",\"stack\":\"UpdatePasswordPage_stack__zhv4q\",\"inputBox\":\"UpdatePasswordPage_inputBox__FgrSP\",\"inputBoxRep\":\"UpdatePasswordPage_inputBoxRep__fAqXS\",\"iconeye\":\"UpdatePasswordPage_iconeye__jPrlx\",\"inputpassword\":\"UpdatePasswordPage_inputpassword__0pD-j\",\"button\":\"UpdatePasswordPage_button__7pufs\",\"errormessage\":\"UpdatePasswordPage_errormessage__NNedZ\",\"errorBorder\":\"UpdatePasswordPage_errorBorder__JoLR4\",\"errorInput\":\"UpdatePasswordPage_errorInput__diBJA\"};","// extracted by mini-css-extract-plugin\nexport default {\"mainstr\":\"UpdatePasswordComponent_mainstr__NnnRk\",\"form\":\"UpdatePasswordComponent_form__mZ1yS\",\"formControl\":\"UpdatePasswordComponent_formControl__VlA3w\",\"formTitle\":\"UpdatePasswordComponent_formTitle__7cfCF\",\"formLabel\":\"UpdatePasswordComponent_formLabel__kt1iv\",\"stack\":\"UpdatePasswordComponent_stack__0ChZG\",\"inputBox\":\"UpdatePasswordComponent_inputBox__G0vxy\",\"inputBoxRep\":\"UpdatePasswordComponent_inputBoxRep__LuP5Z\",\"iconeye\":\"UpdatePasswordComponent_iconeye__jOzvf\",\"inputpassword\":\"UpdatePasswordComponent_inputpassword__n-rMD\",\"button\":\"UpdatePasswordComponent_button__BU71d\",\"errormessage\":\"UpdatePasswordComponent_errormessage__ySVyv\",\"errorBorder\":\"UpdatePasswordComponent_errorBorder__DyS2Y\",\"errorInput\":\"UpdatePasswordComponent_errorInput__CVkvW\"};","import { ErrorMessage, Field, Formik, Form, FormikHelpers  } from 'formik';\nimport { useState } from \"react\";\nimport * as Yup from 'yup';\nimport { ReactComponent as OpenEyeIcon } from '../../images/icons/eye-slash.svg';\nimport { ReactComponent as ClosedEyeIcon } from '../../images/icons/eye.svg';\nimport css from \"./UpdatePasswordComponent.module.css\"\n\ninterface Values {\n  newPassword: string,\n  repeatNewPassword: string,\n} \n\ninterface IProps {\n  onSubmit: (values: Values, { resetForm }: FormikHelpers<Values>) => void\n}\n\n\nconst UpdatetPassword: React.FC<IProps> = ({onSubmit}) => {\n    const [showNewPassword, setShowNewPassword] = useState(false);\n    const [showRepeatNewPassword, setShowRepeatNewPassword] = useState(false);\n  \n    const initialValues = {\n      newPassword: '',\n      repeatNewPassword: '',\n    };\n  \n    const validationSchema = Yup.object({\n      newPassword: Yup.string()\n        .required('Password is required.')\n        .min(7, 'Password must be at least 8 characters.')\n        .max(55, 'Password must be less than 55 characters.'),\n      repeatNewPassword: Yup.string()\n        .oneOf([Yup.ref('newPassword')], 'Passwords must match')\n        .required('Repeat password is required.'),\n    });\n\n  \n    return (\n  \n        <div className={css.mainstr}>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ errors, touched }) => (\n              <Form className={css.form}>\n                <h1 className={css.formTitle}>Update password</h1>\n                <div className={css.formControl}>\n                <div className={css.stack}>\n                    <label className={css.formLabel} htmlFor=\"update-password-id1\">\n                      Enter your new password\n                    </label>\n                    <div\n                      className={`${css.inputBox} ${\n                        errors.newPassword && touched.newPassword ? css.errorBorder : ''\n                      }`}\n                    >\n                      <Field\n                        id=\"update-password-id1\"\n                        className={`${css.inputpassword}  ${\n                          errors.newPassword && touched.newPassword\n                            ? css.errorInput\n                            : ''\n                        }`}\n                        name=\"newPassword\"\n                        type={showNewPassword ? 'text' : 'password'}\n                        placeholder=\"Enter new password\"\n                      />\n                      <div\n                        className={css.iconeye}\n                        onClick={() => setShowNewPassword(!showNewPassword)}\n                        style={{\n                          cursor: 'pointer',\n                          marginTop: 'auto',\n                          marginBottom: 'auto',\n                        }}\n                      >\n                        {showNewPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                      </div>\n                    </div>\n                    <ErrorMessage\n                      name=\"newPassword\"\n                      component=\"div\"\n                      className={css.errormessage}\n                    />\n                  </div>\n                  <div className={css.stack}>\n                    <label className={css.formLabel} htmlFor=\"update-password-id2\">\n                      Repeat your new password\n                    </label>\n                    <div\n                      className={`${css.inputBox} ${\n                        errors.repeatNewPassword && touched.repeatNewPassword ? css.errorBorder : ''\n                      }`}\n                    >\n                      <Field\n                        id=\"update-password-id2\"\n                        className={`${css.inputpassword}  ${\n                          errors.repeatNewPassword && touched.repeatNewPassword\n                            ? css.errorInput\n                            : ''\n                        }`}\n                        name=\"repeatNewPassword\"\n                        type={showRepeatNewPassword ? 'text' : 'password'}\n                        placeholder=\"Repeat new password\"\n                      />\n                      <div\n                        className={css.iconeye}\n                        onClick={() => setShowRepeatNewPassword(!showRepeatNewPassword)}\n                        style={{\n                          cursor: 'pointer',\n                          marginTop: 'auto',\n                          marginBottom: 'auto',\n                        }}\n                      >\n                        {showRepeatNewPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                      </div>\n                    </div>\n                    <ErrorMessage\n                      name=\"repeatNewPassword\"\n                      component=\"div\"\n                      className={css.errormessage}\n                    />\n                  </div>\n                  <button type=\"submit\" className={css.button}>Send</button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n        \n    );\n  };\n  \n  export default UpdatetPassword","\nimport { useParams } from 'react-router-dom';\nimport { sendUpdatePass } from '../../services/waterApi';\nimport css from './UpdatePasswordPage.module.css';\nimport { toast } from 'react-toastify';\nimport Backdrop from '../../components/Backdrop/Backdrop';\nimport Loader from '../../components/Loader/Loader';\nimport { useState } from 'react';\nimport UpdatetPassword from '../../components/UpdatePassword/UpdatePassword';\nimport { FormikHelpers } from 'formik'\n\ninterface Values {\n  newPassword: string,\n  repeatNewPassword: string,\n} \n\nconst UpdatetPasswordPage = () => {\n  const { token } = useParams();\n  const [loader, setLoader] = useState(false);\n\n  const handleSubmit = async (values: Values, { resetForm }: FormikHelpers<Values>) => {\n    const { newPassword, repeatNewPassword } = values;\n    \n\n    if (newPassword !== repeatNewPassword) {\n      return;\n    }\n    setLoader(true)\n    try {\n      if(!token) return\n      await sendUpdatePass(token, {newPassword: repeatNewPassword});\n      toast.success(\"Password changed successfully\")\n\n      setTimeout(()=> {\n        return window.location.replace('/aqua-frontend/signin');\n      }, 3000)\n\n    } catch (error) {\n      setLoader(false)\n      toast.error(\"Something went wrong, try again later\")\n      \n    } finally {\n      setLoader(false)\n    }\n\n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <UpdatetPassword onSubmit={handleSubmit}/>\n      {loader && \n       <Backdrop>\n         <Loader />\n       </Backdrop>}\n    </div>\n  );\n};\n\nexport default UpdatetPasswordPage;\n"],"names":["_ref","onSubmit","showNewPassword","setShowNewPassword","useState","showRepeatNewPassword","setShowRepeatNewPassword","validationSchema","Yup","newPassword","required","min","max","repeatNewPassword","oneOf","_jsx","className","css","children","Formik","initialValues","_ref2","errors","touched","_jsxs","Form","htmlFor","concat","Field","id","name","type","placeholder","onClick","style","cursor","marginTop","marginBottom","ClosedEyeIcon","OpenEyeIcon","ErrorMessage","component","UpdatetPasswordPage","token","useParams","loader","setLoader","UpdatetPassword","async","values","resetForm","sendUpdatePass","toast","success","setTimeout","window","location","replace","error","Backdrop","Loader"],"sourceRoot":""}