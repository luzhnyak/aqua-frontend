{"version":3,"file":"static/js/539.9fd5dc0f.chunk.js","mappings":"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","sources":["webpack://aqua-frontend/./src/pages/SigninPage/SigninPage.module.css?f611","pages/SigninPage/SigninPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SigninPage_container__jZtsy\",\"mainstr\":\"SigninPage_mainstr__teBX0\",\"formControl\":\"SigninPage_formControl__TaunX\",\"formTitle\":\"SigninPage_formTitle__v++9q\",\"formLabel\":\"SigninPage_formLabel__A6Iuy\",\"stack\":\"SigninPage_stack__x4WtM\",\"input\":\"SigninPage_input__30rgL\",\"inputBox\":\"SigninPage_inputBox__Otb+I\",\"iconeye\":\"SigninPage_iconeye__pUOLw\",\"inputpassword\":\"SigninPage_inputpassword__Bez2r\",\"button\":\"SigninPage_button__N-rGB\",\"errormessage\":\"SigninPage_errormessage__wcJqg\",\"errorBorder\":\"SigninPage_errorBorder__uIfDT\",\"errorInput\":\"SigninPage_errorInput__lMMti\"};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ReactComponent as OpenEyeIcon } from 'images/icons/eye-slash.svg';\nimport { ReactComponent as ClosedEyeIcon } from 'images/icons/eye.svg';\nimport { loginThunk } from '../../redux/auth/operations';\nimport css from './SigninPage.module.css';\n\nconst SigninPage = () => {\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email().required('Email is required.'),\n    password: Yup.string()\n      .required('Password is required.')\n      .min(7, 'Password must be at least 8 characters.')\n      .max(55, 'Password must be less than 55 characters.'),\n  });\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(loginThunk(values));\n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.mainstr}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form className={css.form}>\n              <h1 className={css.formTitle}>Sign In</h1>\n              <div className={css.formControl}>\n                <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"unique-id1\">\n                    Enter your email\n                  </label>\n                  <Field\n                    id=\"unique-id1\"\n                    className={`${css.input} ${\n                      errors.email && touched.email ? css.errorBorder : ''\n                    } ${errors.email && touched.email ? css.errorInput : ''}`}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n\n                <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"unique-id2\">\n                    Enter your password\n                  </label>\n                  <div\n                    className={`${css.inputBox} ${\n                      errors.password && touched.password ? css.errorBorder : ''\n                    }`}\n                  >\n                    <Field\n                      id=\"unique-id2\"\n                      className={`${css.inputpassword}  ${\n                        errors.password && touched.password\n                          ? css.errorInput\n                          : ''\n                      }`}\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Password\"\n                    />\n                    <div\n                      className={css.iconeye}\n                      onClick={() => setShowPassword(!showPassword)}\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 'auto',\n                        marginBottom: 'auto',\n                      }}\n                    >\n                      {showPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                    </div>\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n\n                <button className={css.button} type=\"submit\">\n                  Sign In\n                </button>\n\n                <Link to=\"/signup\" className={css.signup}>\n                  <p className={css.signupText}>Sign up</p>\n                </Link>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default SigninPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","validationSchema","Yup","email","required","password","min","max","_jsx","className","css","children","Formik","initialValues","onSubmit","values","_ref","resetForm","loginThunk","_ref2","errors","touched","_jsxs","Form","htmlFor","Field","id","concat","name","type","placeholder","ErrorMessage","component","onClick","style","cursor","marginTop","marginBottom","ClosedEyeIcon","OpenEyeIcon","Link","to"],"sourceRoot":""}