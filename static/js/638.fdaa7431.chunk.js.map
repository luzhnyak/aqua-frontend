{"version":3,"file":"static/js/638.fdaa7431.chunk.js","mappings":"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","sources":["webpack://aqua-frontend/./src/pages/SignupPage/SignupPage.module.css?0dd3","pages/SignupPage/SignupPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignupPage_container__r3EgE\",\"mainstr\":\"SignupPage_mainstr__KRJyF\",\"form\":\"SignupPage_form__eJGb2\",\"formControl\":\"SignupPage_formControl__Xc2Fg\",\"formTitle\":\"SignupPage_formTitle__t-ejR\",\"formLabel\":\"SignupPage_formLabel__8fzJS\",\"stack\":\"SignupPage_stack__t73w8\",\"input\":\"SignupPage_input__-zMrt\",\"inputBox\":\"SignupPage_inputBox__9uh2R\",\"inputBoxRep\":\"SignupPage_inputBoxRep__mo2Ls\",\"iconeye\":\"SignupPage_iconeye__7z13K\",\"inputpassword\":\"SignupPage_inputpassword__2gacp\",\"button\":\"SignupPage_button__JhlSk\",\"errormessage\":\"SignupPage_errormessage__Fiw-A\",\"errorBorder\":\"SignupPage_errorBorder__9u7oD\",\"errorInput\":\"SignupPage_errorInput__E2HXP\",\"signin\":\"SignupPage_signin__NDozC\"};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ReactComponent as OpenEyeIcon } from 'images/icons/eye-slash.svg';\nimport { ReactComponent as ClosedEyeIcon } from 'images/icons/eye.svg';\nimport { signUpThunk } from '../../redux/auth/operations';\nimport css from './SignupPage.module.css';\n\nconst SignupPage = () => {\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRepPassword, setShowRepPassword] = useState(false);\n\n  const initialValues = {\n    email: '',\n    password: '',\n    repeatPassword: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email().required('Email is required.'),\n    password: Yup.string()\n      .required('Password is required.')\n      .min(7, 'Password must be at least 8 characters.')\n      .max(55, 'Password must be less than 55 characters.'),\n    repeatPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Repeat password is required.'),\n  });\n\n  const onSubmit = (values, { resetForm }) => {\n    const { repeatPassword, ...newObject } = values;\n    dispatch(signUpThunk(newObject));\n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.mainstr}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form className={css.form}>\n              <h1 className={css.formTitle}>Sign Up</h1>\n              <div className={css.formControl}>\n                <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"unique-id1\">\n                    Enter your email\n                  </label>\n                  <Field\n                    id=\"unique-id1\"\n                    className={`${css.input} ${\n                      errors.email && touched.email ? css.errorBorder : ''\n                    } ${errors.email && touched.email ? css.errorInput : ''}`}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n\n                <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"unique-id2\">\n                    Enter your password\n                  </label>\n                  <div\n                    className={`${css.inputBox} ${\n                      errors.password && touched.password ? css.errorBorder : ''\n                    }`}\n                  >\n                    <Field\n                      id=\"unique-id2\"\n                      className={`${css.inputpassword}  ${\n                        errors.password && touched.password\n                          ? css.errorInput\n                          : ''\n                      }`}\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Password\"\n                    />\n                    <div\n                      className={css.iconeye}\n                      onClick={() => setShowPassword(!showPassword)}\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 'auto',\n                        marginBottom: 'auto',\n                      }}\n                    >\n                      {showPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                    </div>\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n\n                <div className={css.stack}>\n                  <label className={css.formLabel} htmlFor=\"unique-id3\">\n                    Repeat your password\n                  </label>\n                  <div\n                    className={`${css.inputBoxRep} ${\n                      errors.repeatPassword && touched.repeatPassword\n                        ? css.errorBorder\n                        : ''\n                    }`}\n                  >\n                    <Field\n                      id=\"unique-id3\"\n                      className={`${css.inputpassword}  ${\n                        errors.repeatPassword && touched.repeatPassword\n                          ? css.errorInput\n                          : ''\n                      }`}\n                      name=\"repeatPassword\"\n                      type={showRepPassword ? 'text' : 'password'}\n                      placeholder=\"Repeat password\"\n                    />\n                    <div\n                      className={css.iconeye}\n                      onClick={() => setShowRepPassword(!showRepPassword)}\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 'auto',\n                        marginBottom: 'auto',\n                      }}\n                    >\n                      {showRepPassword ? <ClosedEyeIcon /> : <OpenEyeIcon />}\n                    </div>\n                  </div>\n                  <ErrorMessage\n                    name=\"repeatPassword\"\n                    component=\"div\"\n                    className={css.errormessage}\n                  />\n                </div>\n\n                <button className={css.button} type=\"submit\">\n                  Sign Up\n                </button>\n\n                <Link to=\"/signin\" className={css.signin}>\n                  <p className={css.signinText}>Sign in</p>\n                </Link>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showRepPassword","setShowRepPassword","validationSchema","Yup","email","required","password","min","max","repeatPassword","oneOf","_jsx","className","css","children","Formik","initialValues","onSubmit","values","_ref","resetForm","newObject","_objectWithoutProperties","_excluded","signUpThunk","_ref2","errors","touched","_jsxs","Form","htmlFor","Field","id","concat","name","type","placeholder","ErrorMessage","component","onClick","style","cursor","marginTop","marginBottom","ClosedEyeIcon","OpenEyeIcon","Link","to"],"sourceRoot":""}